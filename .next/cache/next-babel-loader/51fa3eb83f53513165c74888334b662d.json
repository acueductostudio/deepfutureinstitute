{"ast":null,"code":"var _jsxFileName = \"/Users/rodrigosalmeron/Sites/deepfuture/components/EmailCollector.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styled from \"styled-components\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport MailchimpSubscribe from \"react-mailchimp-subscribe\";\nconst url = \"https://studio.us19.list-manage.com/subscribe/post?u=c9d7bbb792de4cdbe363fad75&amp;id=434dbf9f3b\";\nconst isEmail = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\nconst CustomForm = ({\n  status,\n  message,\n  onValidated,\n  enterprise,\n  complete,\n  short\n}) => {\n  const {\n    0: displayMessage,\n    1: setMessage\n  } = useState(false);\n  const {\n    0: showMessage,\n    1: setShowMessage\n  } = useState(false);\n  let email, name, industry, company, employees;\n\n  const submitEnterprise = () => {\n    if (!name.value) {\n      setShowMessage(true), setMessage(\"Ingresa tu nombre\");\n    } else if (!lastname.value) {\n      setShowMessage(true), setMessage(\"Ingresa tu apellido\");\n    } else if (!email.value) {\n      setShowMessage(true), setMessage(\"Ingresa tu email\");\n    } else if (!isEmail.test(email.value)) {\n      setShowMessage(true), setMessage(\"Email en formato incorrecto\");\n    } else {\n      setShowMessage(false), onValidated({\n        NAME: name.value,\n        EMAIL: email.value,\n        COMPANY: company.value,\n        EMPLOYEES: employees.value\n      });\n    }\n  };\n\n  const submitComplete = () => {\n    if (!name.value) {\n      setShowMessage(true), setMessage(\"Ingresa tu nombre\");\n    } else if (!email.value) {\n      setShowMessage(true), setMessage(\"Ingresa tu email\");\n    } else if (!isEmail.test(email.value)) {\n      setShowMessage(true), setMessage(\"Email en formato incorrecto\");\n    } else {\n      setShowMessage(false), onValidated({\n        NAME: name.value,\n        EMAIL: email.value,\n        INDUSTRY: industry.value\n      });\n    }\n  };\n\n  const submitShort = () => {\n    if (!name.value) {\n      setShowMessage(true), setMessage(\"Ingresa tu nombre\");\n    } else if (!lastname.value) {\n      setShowMessage(true), setMessage(\"Ingresa tu apellido\");\n    } else if (!email.value) {\n      setShowMessage(true), setMessage(\"Ingresa tu email\");\n    } else if (!isEmail.test(email.value)) {\n      setShowMessage(true), setMessage(\"Email en formato incorrecto\");\n    } else {\n      setShowMessage(false), onValidated({\n        EMAIL: email.value\n      });\n    }\n  };\n\n  return __jsx(React.Fragment, null, status === \"sending\" && __jsx(Message, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 32\n    }\n  }, \"Enviando...\"), showMessage ? __jsx(Message, {\n    error: true,\n    dangerouslySetInnerHTML: {\n      __html: displayMessage\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }) : null, status === \"error\" && __jsx(Message, {\n    error: true,\n    dangerouslySetInnerHTML: {\n      __html: message\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }), status === \"success\" && __jsx(Message, {\n    success: true,\n    dangerouslySetInnerHTML: {\n      __html: message\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }), status !== \"success\" && __jsx(React.Fragment, null, __jsx(Input, {\n    ref: node => email = node,\n    type: \"email\",\n    placeholder: short ? \"Tu correo\" : \"Email\",\n    id: \"email\",\n    short: short,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }), __jsx(Label, {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, \"email\"), !short && __jsx(React.Fragment, null, __jsx(Input, {\n    ref: node => name = node,\n    type: \"text\",\n    placeholder: \"Nombre\",\n    id: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 15\n    }\n  }), __jsx(Label, {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 15\n    }\n  }, \"nombre\")), complete && __jsx(React.Fragment, null, __jsx(Input, {\n    ref: node => industry = node,\n    type: \"text\",\n    placeholder: \"Industria\",\n    id: \"industria\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 15\n    }\n  }), __jsx(Label, {\n    htmlFor: \"industria\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 15\n    }\n  }, \"industria\")), enterprise && __jsx(React.Fragment, null, __jsx(Input, {\n    ref: node => company = node,\n    type: \"text\",\n    placeholder: \"compa\\xF1\\xEDa\",\n    id: \"compa\\xF1\\xEDa\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 15\n    }\n  }), __jsx(Label, {\n    htmlFor: \"compa\\xF1\\xEDa\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 15\n    }\n  }, \"compa\\xF1\\xEDa\"), __jsx(Input, {\n    ref: node => employees = node,\n    type: \"text\",\n    placeholder: \"empleados\",\n    id: \"empleados\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 15\n    }\n  }), __jsx(Label, {\n    htmlFor: \"empleados\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 15\n    }\n  }, \"empleados\")), __jsx(Button, {\n    short: short,\n    onClick: short ? submitShort : complete ? submitComplete : submitEnterprise,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }, short ? \"Descargar PDF gratuito\" : \"Descargar gratis\")));\n};\n\nconst EmailCollector = ({\n  enterprise,\n  complete,\n  short\n}) => {\n  return __jsx(MailchimpSubscribe, {\n    url: url,\n    render: ({\n      subscribe,\n      status,\n      message\n    }) => __jsx(CustomForm, {\n      enterprise: enterprise,\n      complete: complete,\n      short: short,\n      status: status,\n      message: message,\n      onValidated: formData => subscribe(formData),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default EmailCollector;\nconst Background = styled.div.withConfig({\n  displayName: \"EmailCollector__Background\",\n  componentId: \"jldx4s-0\"\n})([\"background-color:\", \";opacity:\", \";position:fixed;pointer-events:\", \";left:0;bottom:0;right:0;top:0;z-index:13;transition:opacity 0.4s ease;\"], props => props.theme.colors.background, props => props.visible ? 0.6 : 0, props => props.visible ? \"auto\" : \"none\");\nconst Message = styled.div.withConfig({\n  displayName: \"EmailCollector__Message\",\n  componentId: \"jldx4s-1\"\n})([\"color:\", \";font-size:\", \";padding-bottom:5px;@media (max-width:600px),(max-height:450px){font-size:1.5rem;}\"], props => props.error ? props.theme.colors.error : props.success ? props.theme.colors.success : props.theme.colors.accent, props => props.success ? \"1.8rem\" : \"1.5rem\");\nconst Label = styled.label.withConfig({\n  displayName: \"EmailCollector__Label\",\n  componentId: \"jldx4s-2\"\n})([\"font-size:0;height:0;width:0;position:absolute;\"]);\nconst Input = styled.input.withConfig({\n  displayName: \"EmailCollector__Input\",\n  componentId: \"jldx4s-3\"\n})([\"width:\", \";padding:13px 18px 13px 26px;line-height:100%;background-color:\", \";border-radius:\", \";border:none;font-size:1.7rem;margin:4px 0;color:\", \";-webkit-appearance:textfield;appearance:textfield;::placeholder{padding-top:4px;color:#31302e;opacity:0.5;}\"], props => props.short ? \"50%\" : \"100%\", props => props.theme.colors.foreground, props => props.short ? \"4px 0px 0px 4px\" : \"4px\", props => props.theme.colors.foreground_lowest);\nconst Button = styled.button.withConfig({\n  displayName: \"EmailCollector__Button\",\n  componentId: \"jldx4s-4\"\n})([\"padding:14px 0%;margin:4px 0;text-align:center;width:\", \";background-color:\", \";color:\", \";border:0;font-size:1.8rem;border-radius:\", \";cursor:pointer;transition:0.3s ease all;@media (hover:hover) and (pointer:fine){&:hover{background-color:#27ae60;color:\", \";span{background-size:0 0;}}}\"], props => props.short ? \"50%\" : \"100%\", props => props.theme.colors.cta, props => props.theme.colors.background, props => props.short ? \"0px 4px 4px 0px\" : \"4px\", props => props.theme.colors.background);\nconst CrossContainer = styled.div.withConfig({\n  displayName: \"EmailCollector__CrossContainer\",\n  componentId: \"jldx4s-5\"\n})([\"width:50px;height:50px;padding:12px;position:absolute;top:3%;right:3%;svg{width:100%;cursor:pointer;}\"]);\nconst Wrapper = styled.div.withConfig({\n  displayName: \"EmailCollector__Wrapper\",\n  componentId: \"jldx4s-6\"\n})([\"pointer-events:\", \";opacity:\", \";max-width:440px;width:80%;top:50%;left:50%;transform:translateX(-50%) translateY(-50%) \", \";font-weight:100;position:fixed;transition:opacity 0.4s ease,transform 0.5s ease;z-index:14;@media (max-width:600px){max-width:calc(100% - 36px);width:100%;margin-left:18px;margin-right:18px;z-index:100;left:0;transform:translateX(0px) translateY(-50%);h4{font-size:2.5rem;}}\"], props => props.clickable ? \"auto\" : \"none\", props => props.clickable ? \"1\" : \"0\", props => props.clickable ? \"translateY(0%)\" : \"translateY(5%)\");","map":{"version":3,"sources":["/Users/rodrigosalmeron/Sites/deepfuture/components/EmailCollector.js"],"names":["styled","useState","useEffect","MailchimpSubscribe","url","isEmail","CustomForm","status","message","onValidated","enterprise","complete","short","displayMessage","setMessage","showMessage","setShowMessage","email","name","industry","company","employees","submitEnterprise","value","lastname","test","NAME","EMAIL","COMPANY","EMPLOYEES","submitComplete","INDUSTRY","submitShort","__html","node","EmailCollector","subscribe","formData","Background","div","props","theme","colors","background","visible","Message","error","success","accent","Label","label","Input","input","foreground","foreground_lowest","Button","button","cta","CrossContainer","Wrapper","clickable"],"mappings":"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","sourcesContent":["import styled from \"styled-components\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport MailchimpSubscribe from \"react-mailchimp-subscribe\";\n\nconst url =\n  \"https://studio.us19.list-manage.com/subscribe/post?u=c9d7bbb792de4cdbe363fad75&amp;id=434dbf9f3b\";\nconst isEmail = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\nconst CustomForm = ({\n  status,\n  message,\n  onValidated,\n  enterprise,\n  complete,\n  short,\n}) => {\n  const [displayMessage, setMessage] = useState(false);\n  const [showMessage, setShowMessage] = useState(false);\n  let email, name, industry, company, employees;\n\n  const submitEnterprise = () => {\n    if (!name.value) {\n      setShowMessage(true), setMessage(\"Ingresa tu nombre\");\n    } else if (!lastname.value) {\n      setShowMessage(true), setMessage(\"Ingresa tu apellido\");\n    } else if (!email.value) {\n      setShowMessage(true), setMessage(\"Ingresa tu email\");\n    } else if (!isEmail.test(email.value)) {\n      setShowMessage(true), setMessage(\"Email en formato incorrecto\");\n    } else {\n      setShowMessage(false),\n        onValidated({\n          NAME: name.value,\n          EMAIL: email.value,\n          COMPANY: company.value,\n          EMPLOYEES: employees.value,\n        });\n    }\n  };\n\n  const submitComplete = () => {\n    if (!name.value) {\n      setShowMessage(true), setMessage(\"Ingresa tu nombre\");\n    } else if (!email.value) {\n      setShowMessage(true), setMessage(\"Ingresa tu email\");\n    } else if (!isEmail.test(email.value)) {\n      setShowMessage(true), setMessage(\"Email en formato incorrecto\");\n    } else {\n      setShowMessage(false),\n        onValidated({\n          NAME: name.value,\n          EMAIL: email.value,\n          INDUSTRY: industry.value,\n        });\n    }\n  };\n\n  const submitShort = () => {\n    if (!name.value) {\n      setShowMessage(true), setMessage(\"Ingresa tu nombre\");\n    } else if (!lastname.value) {\n      setShowMessage(true), setMessage(\"Ingresa tu apellido\");\n    } else if (!email.value) {\n      setShowMessage(true), setMessage(\"Ingresa tu email\");\n    } else if (!isEmail.test(email.value)) {\n      setShowMessage(true), setMessage(\"Email en formato incorrecto\");\n    } else {\n      setShowMessage(false),\n        onValidated({\n          EMAIL: email.value,\n        });\n    }\n  };\n\n  return (\n    <>\n      {status === \"sending\" && <Message>Enviando...</Message>}\n      {showMessage ? (\n        <Message error dangerouslySetInnerHTML={{ __html: displayMessage }} />\n      ) : null}\n      {status === \"error\" && (\n        <Message error dangerouslySetInnerHTML={{ __html: message }} />\n      )}\n      {status === \"success\" && (\n        <Message success dangerouslySetInnerHTML={{ __html: message }} />\n      )}\n      {status !== \"success\" && (\n        <>\n          <Input\n            ref={(node) => (email = node)}\n            type=\"email\"\n            placeholder={short ? \"Tu correo\" : \"Email\"}\n            id=\"email\"\n            short={short}\n          />\n          <Label htmlFor=\"email\">email</Label>\n          {!short && (\n            <>\n              <Input\n                ref={(node) => (name = node)}\n                type=\"text\"\n                placeholder=\"Nombre\"\n                id=\"name\"\n              />\n              <Label htmlFor=\"name\">nombre</Label>\n            </>\n          )}\n          {complete && (\n            <>\n              <Input\n                ref={(node) => (industry = node)}\n                type=\"text\"\n                placeholder=\"Industria\"\n                id=\"industria\"\n              />\n              <Label htmlFor=\"industria\">industria</Label>\n            </>\n          )}\n          {enterprise && (\n            <>\n              <Input\n                ref={(node) => (company = node)}\n                type=\"text\"\n                placeholder=\"compañía\"\n                id=\"compañía\"\n              />\n              <Label htmlFor=\"compañía\">compañía</Label>\n              <Input\n                ref={(node) => (employees = node)}\n                type=\"text\"\n                placeholder=\"empleados\"\n                id=\"empleados\"\n              />\n              <Label htmlFor=\"empleados\">empleados</Label>\n            </>\n          )}\n          <Button\n            short={short}\n            onClick={\n              short ? submitShort : complete ? submitComplete : submitEnterprise\n            }\n          >\n            {short ? \"Descargar PDF gratuito\" : \"Descargar gratis\"}\n          </Button>\n        </>\n      )}\n    </>\n  );\n};\n\nconst EmailCollector = ({ enterprise, complete, short }) => {\n  return (\n    <MailchimpSubscribe\n      url={url}\n      render={({ subscribe, status, message }) => (\n        <CustomForm\n          enterprise={enterprise}\n          complete={complete}\n          short={short}\n          status={status}\n          message={message}\n          onValidated={(formData) => subscribe(formData)}\n        />\n      )}\n    />\n  );\n};\n\nexport default EmailCollector;\n\nconst Background = styled.div`\n  background-color: ${(props) => props.theme.colors.background};\n  opacity: ${(props) => (props.visible ? 0.6 : 0)};\n  position: fixed;\n  pointer-events: ${(props) => (props.visible ? \"auto\" : \"none\")};\n  left: 0;\n  bottom: 0;\n  right: 0;\n  top: 0;\n  z-index: 13;\n  transition: opacity 0.4s ease;\n`;\n\nconst Message = styled.div`\n  color: ${(props) =>\n    props.error\n      ? props.theme.colors.error\n      : props.success\n      ? props.theme.colors.success\n      : props.theme.colors.accent};\n  font-size: ${(props) => (props.success ? \"1.8rem\" : \"1.5rem\")};\n  padding-bottom: 5px;\n  @media (max-width: 600px), (max-height: 450px) {\n    font-size: 1.5rem;\n  }\n`;\n\nconst Label = styled.label`\n  font-size: 0;\n  height: 0;\n  width: 0;\n  position: absolute;\n`;\n\nconst Input = styled.input`\n  width: ${(props) => (props.short ? \"50%\" : \"100%\")};\n  padding: 13px 18px 13px 26px;\n  line-height: 100%;\n  background-color: ${(props) => props.theme.colors.foreground};\n  border-radius: ${(props) => (props.short ? \"4px 0px 0px 4px\" : \"4px\")};\n  border: none;\n  font-size: 1.7rem;\n  margin: 4px 0;\n  color: ${(props) => props.theme.colors.foreground_lowest};\n  -webkit-appearance: textfield;\n  appearance: textfield;\n  ::placeholder {\n    padding-top: 4px;\n    color: #31302e;\n    opacity: 0.5;\n  }\n`;\n\nconst Button = styled.button`\n  padding: 14px 0%;\n  margin: 4px 0;\n  text-align: center;\n  width: ${(props) => (props.short ? \"50%\" : \"100%\")};\n  background-color: ${(props) => props.theme.colors.cta};\n  color: ${(props) => props.theme.colors.background};\n  border: 0;\n  font-size: 1.8rem;\n  border-radius: ${(props) => (props.short ? \"0px 4px 4px 0px\" : \"4px\")};\n  cursor: pointer;\n  transition: 0.3s ease all;\n  @media (hover: hover) and (pointer: fine) {\n    &:hover {\n      background-color: #27ae60;\n      color: ${(props) => props.theme.colors.background};\n      span {\n        background-size: 0 0;\n      }\n    }\n  }\n`;\n\nconst CrossContainer = styled.div`\n  width: 50px;\n  height: 50px;\n  padding: 12px;\n  position: absolute;\n  top: 3%;\n  right: 3%;\n  svg {\n    width: 100%;\n    cursor: pointer;\n  }\n`;\n\nconst Wrapper = styled.div`\n  pointer-events: ${(props) => (props.clickable ? \"auto\" : \"none\")};\n  opacity: ${(props) => (props.clickable ? \"1\" : \"0\")};\n  max-width: 440px;\n  width: 80%;\n  top: 50%;\n  left: 50%;\n  transform: translateX(-50%) translateY(-50%)\n    ${(props) => (props.clickable ? \"translateY(0%)\" : \"translateY(5%)\")};\n  font-weight: 100;\n  position: fixed;\n  transition: opacity 0.4s ease, transform 0.5s ease;\n  z-index: 14;\n  @media (max-width: 600px) {\n    max-width: calc(100% - 36px);\n    width: 100%;\n    margin-left: 18px;\n    margin-right: 18px;\n    z-index: 100;\n    left: 0;\n    transform: translateX(0px) translateY(-50%);\n    h4 {\n      font-size: 2.5rem;\n    }\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}