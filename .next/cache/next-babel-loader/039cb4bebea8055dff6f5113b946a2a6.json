{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  .TopBar{\\n    box-shadow: 1px 1px 4px \", \";\\n  }\\n  @media (max-width: 600px), (max-height:450px) {\\n    .react-reveal {\\n    animation: none !important;\\n    opacity: 1 !important;\\n    }\\n    #Wrapper{\\n      overflow: \", \";\\n      height:\", \";\\n    }\\n    body {\\n    overflow-y: \", \";\\n      &:after,&:before{\\n        content: \\\" \\\";\\n        position: fixed;\\n        right: 0;\\n        left: 0;\\n        height: 18px;\\n        z-index:100;\\n        background-color: \", \";\\n      }\\n      &:before {\\n        top:0;\\n      }\\n      &:after {\\n        bottom:0;\\n      }\\n    }  \\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useEffect, useState, useRef, useCallback } from \"react\";\nimport styled, { createGlobalStyle } from \"styled-components\";\nimport Header from \"./header\";\nimport { useRouter } from \"next/router\";\nimport CookieMessage from \"./CookieMessage\";\nimport { initGA, logPageView } from \"utils/analytics\";\nimport ReactPixel from \"react-facebook-pixel\";\nimport { disableBodyScroll, enableBodyScroll } from \"body-scroll-lock\";\nimport NewsletterPopup from \"./NewsletterPopup\";\nexport default (function (_ref) {\n  var children = _ref.children,\n      toggleLang = _ref.toggleLang,\n      checkForConsent = _ref.checkForConsent,\n      consentToCookies = _ref.consentToCookies,\n      hasToConsent = _ref.hasToConsent,\n      hasLoaded = _ref.hasLoaded,\n      locale = _ref.locale;\n\n  var _useState = useState(false),\n      isOpen = _useState[0],\n      setOpen = _useState[1];\n\n  var _useState2 = useState(true),\n      showSketch = _useState2[0],\n      setShowSketch = _useState2[1];\n\n  var _useState3 = useState(false),\n      isAbout = _useState3[0],\n      setIsAbout = _useState3[1];\n\n  var _useState4 = useState(\"\"),\n      headerTitle = _useState4[0],\n      setTitle = _useState4[1];\n\n  var _useState5 = useState(false),\n      showArrow = _useState5[0],\n      setShowArrow = _useState5[1];\n\n  var _useState6 = useState(true),\n      showConsentMessage = _useState6[0],\n      setShowConsentMessage = _useState6[1];\n\n  var _useState7 = useState(false),\n      showPopup = _useState7[0],\n      setShowPopup = _useState7[1];\n\n  var router = useRouter();\n  var mouse = useRef([1200, 1]);\n  var onMouseMove = useCallback(function (_ref2) {\n    var x = _ref2.clientX,\n        y = _ref2.clientY;\n    return mouse.current = [x - window.innerWidth / 2, y - window.innerHeight / 2];\n  }, [mouse.current]);\n  var onTouchMove = useCallback(function (e) {\n    var touch = e.changedTouches[0];\n    var x = touch.clientX;\n    var y = touch.clientY;\n    mouse.current = [x - window.innerWidth / 2, y - window.innerHeight / 2];\n  }, [mouse.current]);\n  useEffect(function () {// const options = {\n    //   autoConfig: true, \n    //   debug: false,\n    // };\n    // ReactPixel.init(\"506854653278097\", null, options);\n  }, []);\n  useEffect(function () {\n    // if (!window.GA_INITIALIZED) {\n    //   initGA();\n    //   window.GA_INITIALIZED = true;\n    // }\n    // logPageView();\n    // ReactPixel.pageView(); // For tracking page view\n    mouse.current[0] = window.innerWidth > 600 ? 1200 : 300;\n\n    if (router.route === \"/\" || router.route === \"/en\") {\n      setShowSketch(true);\n      setShowArrow(true);\n      setIsAbout(false);\n      setShowPopup(false);\n    } else if (router.route === \"/nosotros\" || router.route === \"/en/about\") {\n      setIsAbout(true);\n      setShowSketch(false);\n      setShowArrow(false);\n      setShowPopup(false);\n    } else if (router.route === \"/podcast\") {\n      setIsAbout(false);\n      setShowSketch(false);\n      setShowArrow(false);\n      setShowPopup(true);\n    } else {\n      setShowSketch(false);\n      setShowArrow(false);\n      setIsAbout(false);\n      setShowPopup(false);\n    }\n  }, [router.route]);\n  useEffect(function () {\n    if (showArrow || showConsentMessage) {\n      document.body.onscroll = function () {\n        checkScroll();\n      };\n    }\n  }, [showArrow]); // useEffect(() => {\n  //   let targetElement = document.querySelector(\"#Nav\");\n  //   if (isOpen) {\n  //     disableBodyScroll(targetElement);\n  //   } else {\n  //     enableBodyScroll(targetElement);\n  //   }\n  // }, [isOpen]);\n\n  var checkScroll = function checkScroll() {\n    if (document.body.scrollTop > 100 || window.scrollY > 100) {\n      document.body.onscroll = null; // document.querySelector(\"#Clipper\").onscroll = null;\n\n      setShowArrow(false);\n      checkForConsent();\n      setShowConsentMessage(false);\n    }\n  };\n\n  var toggleNav = function toggleNav() {\n    setOpen(!isOpen);\n  };\n\n  var closeNav = function closeNav() {\n    setOpen(false);\n  };\n\n  var doConsentToCookies = function doConsentToCookies() {\n    consentToCookies();\n  };\n\n  return __jsx(React.Fragment, null, __jsx(PageWrapper, {\n    id: \"Wrapper\",\n    onMouseMove: showSketch | isAbout ? onMouseMove : undefined,\n    onTouchMove: showSketch | isAbout ? onTouchMove : undefined\n  }, __jsx(Header, {\n    isOpen: isOpen,\n    headerTitle: headerTitle,\n    hasLoaded: hasLoaded,\n    closeNav: closeNav,\n    locale: locale,\n    route: router.route\n  }), React.cloneElement(children, {\n    setTitle: setTitle,\n    hasLoaded: hasLoaded,\n    mouse: mouse\n  }), __jsx(CookieMessage, {\n    locale: locale,\n    doConsentToCookies: doConsentToCookies,\n    hasToConsent: hasToConsent\n  }), __jsx(BodyOverflow, {\n    isOpen: isOpen,\n    hasLoaded: hasLoaded\n  }), showPopup && __jsx(NewsletterPopup, null)));\n});\nvar BodyOverflow = createGlobalStyle(_templateObject(), function (props) {\n  return props.theme.colors.accent;\n}, function (props) {\n  return props.hasLoaded ? \"unset\" : \"hidden\";\n}, function (props) {\n  return props.hasLoaded ? \"unset\" : \"100%\";\n}, function (props) {\n  return props.hasLoaded ? \"auto\" : \"hidden\";\n}, function (props) {\n  return props.theme.colors.background;\n});\nvar BackgroundOpacity = styled.div.withConfig({\n  displayName: \"layout__BackgroundOpacity\",\n  componentId: \"sc-18mrapy-0\"\n})([\"background-color:\", \";opacity:\", \";position:fixed;pointer-events:\", \";left:0;bottom:0;right:0;top:0;z-index:13;transition:opacity 0.4s ease;\"], function (props) {\n  return props.theme.colors.background;\n}, function (props) {\n  return props.visible ? 0.6 : 0;\n}, function (props) {\n  return props.visible ? \"auto\" : \"none\";\n});\nvar PageWrapper = styled.div.withConfig({\n  displayName: \"layout__PageWrapper\",\n  componentId: \"sc-18mrapy-1\"\n})([\"top:-3px;position:relative;width:100%;flex-direction:column;display:flex;justify-content:flex-start;color:\", \";background-color:\", \";\"], function (props) {\n  return props.theme.colors.foreground;\n}, function (props) {\n  return props.theme.colors.background;\n});\nvar Border = styled.div.withConfig({\n  displayName: \"layout__Border\",\n  componentId: \"sc-18mrapy-2\"\n})([\"opacity:1;pointer-events:none;z-index:99;width:calc(100% - 36px);height:calc(100% - 36px);background-color:none;position:fixed;left:18px;top:18px;right:18px;bottom:18px;margin:0 auto;max-width:1504px;mix-blend-mode:exclusion;transition:opacity 0.3s ease-in,border 0.3s ease-in;border:\", \";@media (max-width:600px),(max-height:450px){mix-blend-mode:normal;}\"], function (props) {\n  return \"\".concat(props.theme.stroke, \" solid \").concat(props.theme.colors.foreground);\n});","map":null,"metadata":{},"sourceType":"module"}