{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport styled from \"styled-components\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport Cross from \"public/assets/img/layout/cross.svg\";\nimport MailchimpSubscribe from \"react-mailchimp-subscribe\";\nimport { disableBodyScroll, enableBodyScroll } from \"body-scroll-lock\";\nconst url = \"https://studio.us19.list-manage.com/subscribe/post?u=c9d7bbb792de4cdbe363fad75&amp;id=434dbf9f3b\";\nconst isEmail = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\nconst CustomForm = ({\n  status,\n  message,\n  onValidated\n}) => {\n  const {\n    0: displayMessage,\n    1: setMessage\n  } = useState(false);\n  const {\n    0: showMessage,\n    1: setShowMessage\n  } = useState(false);\n  let email, name, lastname;\n\n  const submit = () => {\n    if (!name.value) {\n      setShowMessage(true), setMessage(\"Ingresa tu nombre\");\n    } else if (!lastname.value) {\n      setShowMessage(true), setMessage(\"Ingresa tu apellido\");\n    } else if (!email.value) {\n      setShowMessage(true), setMessage(\"Ingresa tu email\");\n    } else if (!isEmail.test(email.value)) {\n      setShowMessage(true), setMessage(\"Email en formato incorrecto\");\n    } else {\n      setShowMessage(false), onValidated({\n        EMAIL: email.value,\n        FNAME: name.value,\n        FLASTNAME: lastname.value\n      });\n    }\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"h4\", null, \"suscr\\xEDbete y\", __jsx(\"br\", null), \"te actualizamos\"), __jsx(\"p\", null, \"Recibe un correo cada vez que publiquemos un cap\\xEDtulo nuevo.\"), status === \"sending\" && __jsx(Message, null, \"Enviando...\"), status === \"error\" && __jsx(Message, {\n    error: true,\n    dangerouslySetInnerHTML: {\n      __html: message\n    }\n  }), showMessage ? __jsx(Message, {\n    error: true,\n    dangerouslySetInnerHTML: {\n      __html: displayMessage\n    }\n  }) : null, status === \"success\" && __jsx(Message, {\n    success: true,\n    dangerouslySetInnerHTML: {\n      __html: message\n    }\n  }), status !== \"success\" && __jsx(React.Fragment, null, __jsx(\"input\", {\n    ref: node => name = node,\n    type: \"text\",\n    placeholder: \"nombre\",\n    id: \"name\"\n  }), __jsx(\"label\", {\n    htmlFor: \"name\"\n  }, \"nombre\"), __jsx(\"input\", {\n    ref: node => lastname = node,\n    type: \"text\",\n    placeholder: \"apellido\",\n    id: \"lastname\"\n  }), __jsx(\"label\", {\n    htmlFor: \"lastname\"\n  }, \"last name\"), __jsx(\"input\", {\n    ref: node => email = node,\n    type: \"email\",\n    placeholder: \"email\",\n    id: \"email\"\n  }), __jsx(\"label\", {\n    htmlFor: \"email\"\n  }, \"email\"), __jsx(Button, {\n    onClick: submit\n  }, \"suscribirme\")));\n};\n\nconst NewsletterPopup = () => {\n  const {\n    0: showPopup,\n    1: setShowPopup\n  } = useState(false);\n  useEffect(() => {\n    let timer1 = setTimeout(() => popupShow(), 10000);\n    return () => {\n      clearTimeout(timer1);\n    };\n  }, []);\n\n  const popupShow = () => {\n    // Disable scroll\n    const targetElement = document.querySelector(\"#NewsletterPopup\"); //dummy\n\n    disableBodyScroll(targetElement);\n    setShowPopup(true);\n  };\n\n  const unlockScreen = () => {\n    const targetElement = document.querySelector(\"#NewsletterPopup\"); //dummy\n\n    enableBodyScroll(targetElement);\n    setShowPopup(false);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Wrapper, {\n    clickable: showPopup,\n    id: \"NewsletterPopup\"\n  }, __jsx(Border, null, __jsx(MailchimpSubscribe, {\n    url: url,\n    render: ({\n      subscribe,\n      status,\n      message\n    }) => __jsx(CustomForm, {\n      status: status,\n      message: message,\n      onValidated: formData => subscribe(formData)\n    })\n  }), __jsx(CrossContainer, null, __jsx(Cross, {\n    onClick: unlockScreen\n  })))), __jsx(Background, {\n    visible: showPopup,\n    onClick: unlockScreen\n  }));\n};\n\nexport default NewsletterPopup;\nconst Background = styled.div.withConfig({\n  displayName: \"NewsletterPopup__Background\",\n  componentId: \"ad5xhy-0\"\n})([\"background-color:\", \";opacity:\", \";position:fixed;pointer-events:\", \";left:0;bottom:0;right:0;top:0;z-index:13;transition:opacity 0.4s ease;\"], props => props.theme.colors.background, props => props.visible ? 0.6 : 0, props => props.visible ? \"auto\" : \"none\");\nconst Message = styled.div.withConfig({\n  displayName: \"NewsletterPopup__Message\",\n  componentId: \"ad5xhy-1\"\n})([\"color:\", \";font-size:\", \";padding-bottom:5px;@media (max-width:600px),(max-height:450px){font-size:1.5rem;}\"], props => props.error ? props.theme.colors.error : props.success ? props.theme.colors.success : props.theme.colors.accent, props => props.success ? \"1.8rem\" : \"1.5rem\");\nconst Border = styled.div.withConfig({\n  displayName: \"NewsletterPopup__Border\",\n  componentId: \"ad5xhy-2\"\n})([\"border:\", \" solid \", \";background-color:\", \";padding:10% 15% 14% 15%;@media (max-width:380px){padding:10% 10% 14% 10%;}\"], props => props.theme.stroke, props => props.theme.colors.foreground, props => props.theme.colors.background);\nconst Button = styled.button.withConfig({\n  displayName: \"NewsletterPopup__Button\",\n  componentId: \"ad5xhy-3\"\n})([\"padding:14px 0%;margin-top:5px;text-align:center;width:100%;background-color:\", \";color:\", \";border:0;font-weight:100;font-size:1.8rem;cursor:pointer;transition:0.3s ease all;@media (hover:hover) and (pointer:fine){&:hover{background-color:#27ae60;color:\", \";span{background-size:0 0;}}}\"], props => props.theme.colors.accent, props => props.theme.colors.foreground, props => props.theme.colors.background);\nconst CrossContainer = styled.div.withConfig({\n  displayName: \"NewsletterPopup__CrossContainer\",\n  componentId: \"ad5xhy-4\"\n})([\"width:50px;height:50px;padding:12px;position:absolute;top:3%;right:3%;svg{width:100%;cursor:pointer;}\"]);\nconst Wrapper = styled.div.withConfig({\n  displayName: \"NewsletterPopup__Wrapper\",\n  componentId: \"ad5xhy-5\"\n})([\"pointer-events:\", \";opacity:\", \";max-width:440px;width:80%;top:50%;left:50%;transform:translateX(-50%) translateY(-50%) \", \";font-weight:100;position:fixed;transition:opacity 0.4s ease,transform 0.5s ease;z-index:14;p{color:\", \";padding-bottom:20px;}h4{color:\", \";font-size:3rem;font-weight:300;line-height:110%;margin-bottom:5%;}label{font-size:0;height:0;width:0;position:absolute;}input{font-weight:100;border-radius:0;width:100%;padding:10px 18px 13px 18px;line-height:100%;background-color:transparent;border:\", \" solid \", \";margin:4px 0;color:\", \";-webkit-appearance:textfield;appearance:textfield;::placeholder{padding-top:4px;}}@media (max-width:600px){max-width:calc(100% - 36px);width:100%;margin-left:18px;margin-right:18px;z-index:100;left:0;transform:translateX(0px) translateY(-50%);h4{font-size:2.5rem;}}@media (max-width:380px){}\"], props => props.clickable ? \"auto\" : \"none\", props => props.clickable ? \"1\" : \"0\", props => props.clickable ? \"translateY(0%)\" : \"translateY(5%)\", props => props.theme.colors.foreground_low, props => props.theme.colors.accent, props => props.theme.stroke, props => props.theme.colors.foreground_lowest, props => props.theme.colors.foreground);","map":null,"metadata":{},"sourceType":"module"}