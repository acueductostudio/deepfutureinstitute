{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport styled from \"styled-components\";\nimport Link from \"next/link\";\nimport Cross from \"public/assets/img/layout/cross.svg\";\n\nconst CookieMessage = props => {\n  let t = props.locale.cookie_message;\n  return __jsx(Wrapper, {\n    borderTop: props.borderTop,\n    clickable: props.hasToConsent\n  }, __jsx(Border, null, __jsx(Divider, {\n    onClick: props.doConsentToCookies\n  }, __jsx(Button, null, __jsx(\"span\", null, t.title)), __jsx(CrossContainer, null, __jsx(Cross, null))), __jsx(\"p\", null, t.p, __jsx(Link, {\n    href: \"/cookies\",\n    passHref: true\n  }, __jsx(\"a\", null, t.link)), t.p_continued)));\n};\n\nexport default CookieMessage;\nconst Border = styled.div`\n  border: ${props => props.theme.stroke} solid\n    ${props => props.theme.colors.foreground};\n  background-color: ${props => props.theme.colors.background};\n`;\nconst Button = styled.button`\n  padding: 14px 0%;\n  text-align: center;\n  width: calc(100% - 45px);\n  background-color: ${props => props.theme.colors.accent};\n  color: ${props => props.theme.colors.foreground};\n  border: 0;\n  font-weight: 100;\n  font-size: 1.8rem;\n  border-right: ${props => props.theme.stroke} solid\n    ${props => props.theme.colors.foreground};\n  cursor: pointer;\n  transition: 0.3s ease all;\n  @media (hover: hover) and (pointer: fine) {\n    &:hover {\n      background-color: ${props => props.theme.colors.success};\n      color: ${props => props.theme.colors.background};\n      span {\n        background-size: 0 0;\n      }\n    }\n  }\n`;\nconst Divider = styled.div`\n  border-bottom: ${props => props.theme.stroke} solid\n    ${props => props.theme.colors.foreground};\n  display: flex;\n`;\nconst CrossContainer = styled.div`\n  width: 45px;\n  height: 45px;\n  padding: 12px;\n  svg {\n    width: 100%;\n    max-width: 30px;\n    cursor: pointer;\n  }\n`;\nconst Wrapper = styled.div`\n  pointer-events: ${props => props.clickable ? \"auto\" : \"none\"};\n  opacity: ${props => props.clickable ? \"1\" : \"0\"};\n  max-width: 590px;\n  width: 80%;\n  bottom: 5%;\n  left: 50%;\n  transform: translateX(-50%)\n    ${props => props.clickable ? \"translateY(0%)\" : \"translateY(5%)\"};\n  font-weight: 100;\n  position: fixed;\n  transition: opacity 0.4s ease, transform 0.5s ease;\n  z-index: 12;\n  p {\n    font-size: 1.2rem;\n    padding: 2.5% 4% 3% 4%;\n  }\n  @media (max-width: 600px) {\n    left: 0;\n    transform: none;\n    width: calc(100% - 36px);\n    margin-left: 18px;\n    margin-right: 18px;\n    bottom: 18px;\n    z-index: 100;\n  }\n`;","map":null,"metadata":{},"sourceType":"module"}