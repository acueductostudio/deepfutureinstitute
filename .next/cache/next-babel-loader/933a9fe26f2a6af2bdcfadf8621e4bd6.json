{"ast":null,"code":"var _jsxFileName = \"/Users/rodrigosalmeron/Sites/deepfuture/pages/_app.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport App from \"next/app\";\nimport Router from \"next/router\";\nimport { ThemeProvider } from \"styled-components\";\nimport LoadingBar from \"react-top-loading-bar\";\nimport Layout from \"components/layout\";\nimport theme from \"styles/theme\";\nimport Cookies from \"js-cookie/dist/js.cookie\"; // import en from \"public/locales/en/common.json\";\n\nimport es from \"public/locales/es/common.json\";\nimport { LangProvider } from \"utils/LangContext\";\nimport { withRouter } from \"next/router\";\nimport { disableBodyScroll, enableBodyScroll } from \"body-scroll-lock\";\n\nclass MyApp extends App {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"toggleLang\", lang => {\n      let language = lang === \"en\" ? en : es;\n      Cookies.set(\"chosenLang\", lang);\n      this.setState({\n        locale: language\n      });\n    });\n\n    _defineProperty(this, \"handleRouteComplete\", url => {\n      var _myself = this;\n\n      setTimeout(function () {\n        _myself.LoadingBar.complete();\n      }, 300);\n    });\n\n    _defineProperty(this, \"handleRouteStart\", url => {\n      this.LoadingBar.continuousStart();\n    });\n\n    _defineProperty(this, \"handleRouteError\", (err, url) => {\n      var _myself = this;\n\n      setTimeout(function () {\n        if (err.cancelled) {\n          console.log(`${err} on route to ${url}`);\n        }\n\n        _myself.LoadingBar.complete();\n      }, 300);\n    });\n\n    _defineProperty(this, \"checkForConsent\", () => {\n      // Check if cookie message has been closed before\n      var _C = Cookies.get(\"showCookieMessage\");\n\n      if (_C === undefined) {\n        this.setState({\n          hasToConsent: true\n        });\n      } else if (_C === \"false\") {\n        this.setState({\n          hasToConsent: false\n        });\n      }\n    });\n\n    _defineProperty(this, \"consentToCookies\", () => {\n      Cookies.set(\"showCookieMessage\", \"false\");\n      this.setState({\n        hasToConsent: false\n      });\n    });\n\n    this.state = {\n      // locale: props.router.route.includes(\"/en\") ? en : es,\n      locale: es,\n      hasToConsent: false,\n      //return hasLoaded to false\n      hasLoaded: true,\n      readyToScroll: false\n    };\n  }\n\n  authenticate() {\n    return new Promise(resolve => setTimeout(resolve, 1500)); //1500\n  }\n\n  componentDidMount() {\n    // Disable scroll\n    // Esto es importante para el loading icon\n    const targetElement = document.querySelector(\"#logo\"); //dummy\n\n    disableBodyScroll(targetElement); // Load Animation\n\n    this.authenticate().then(() => {\n      const bordered = document.getElementById(\"bordered\");\n      const logo = document.getElementById(\"logo\");\n      const revealer = document.getElementById(\"revealer\");\n\n      if (bordered) {\n        setTimeout(() => {\n          // transition out\n          bordered.classList.add(\"hidden\");\n          logo.style.opacity = \"0\"; // bordered.style.transform = \"scale(1)\";\n          // bordered.style.borderWidth = \"2px\";\n\n          setTimeout(() => {\n            revealer.style.opacity = \"0\";\n            revealer.style.pointerEvents = \"none\";\n            this.setState({\n              hasLoaded: true\n            }, () => console.log(\"Page hasLoaded\"), enableBodyScroll(targetElement));\n          }, 500);\n          setTimeout(() => {\n            // remove from DOM\n            bordered.remove();\n            revealer.remove();\n            logo.remove();\n          }, 3000);\n        }, 500);\n      }\n    }); // router event listeners for loadingBar\n\n    Router.events.on(\"routeChangeStart\", this.handleRouteStart);\n    Router.events.on(\"routeChangeComplete\", this.handleRouteComplete);\n    Router.events.on(\"routeChangeError\", this.handleRouteError);\n  }\n\n  componentWillUnmount() {\n    Router.events.off(\"routeChangeStart\", this.handleRouteStart);\n    Router.events.off(\"routeChangeComplete\", this.handleRouteComplete);\n    Router.events.off(\"routeChangeError\", this.handleRouteError);\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps\n    } = this.props;\n    return __jsx(ThemeProvider, {\n      theme: theme,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 7\n      }\n    }, __jsx(LangProvider, {\n      value: this.state.locale,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }\n    }, __jsx(LoadingBar, {\n      onRef: ref => this.LoadingBar = ref,\n      height: 3,\n      color: theme.colors.accent,\n      className: \"TopBar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }\n    }), __jsx(Layout, {\n      locale: this.state.locale,\n      checkForConsent: this.checkForConsent,\n      consentToCookies: this.consentToCookies,\n      hasToConsent: this.state.hasToConsent,\n      hasLoaded: this.state.hasLoaded,\n      toggleLang: this.toggleLang,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }\n    }, __jsx(Component, _extends({\n      locale: this.state.locale\n    }, pageProps, {\n      lang: this.state.locale.lang,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }\n    })))));\n  }\n\n}\n\nexport default withRouter(MyApp);","map":{"version":3,"sources":["/Users/rodrigosalmeron/Sites/deepfuture/pages/_app.js"],"names":["React","App","Router","ThemeProvider","LoadingBar","Layout","theme","Cookies","es","LangProvider","withRouter","disableBodyScroll","enableBodyScroll","MyApp","constructor","props","lang","language","en","set","setState","locale","url","_myself","setTimeout","complete","continuousStart","err","cancelled","console","log","_C","get","undefined","hasToConsent","state","hasLoaded","readyToScroll","authenticate","Promise","resolve","componentDidMount","targetElement","document","querySelector","then","bordered","getElementById","logo","revealer","classList","add","style","opacity","pointerEvents","remove","events","on","handleRouteStart","handleRouteComplete","handleRouteError","componentWillUnmount","off","render","Component","pageProps","ref","colors","accent","checkForConsent","consentToCookies","toggleLang"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport App from \"next/app\";\nimport Router from \"next/router\";\nimport { ThemeProvider } from \"styled-components\";\nimport LoadingBar from \"react-top-loading-bar\";\nimport Layout from \"components/layout\";\nimport theme from \"styles/theme\";\nimport Cookies from \"js-cookie/dist/js.cookie\";\n// import en from \"public/locales/en/common.json\";\nimport es from \"public/locales/es/common.json\";\nimport { LangProvider } from \"utils/LangContext\";\nimport { withRouter } from \"next/router\";\nimport { disableBodyScroll, enableBodyScroll } from \"body-scroll-lock\";\n\nclass MyApp extends App {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // locale: props.router.route.includes(\"/en\") ? en : es,\n      locale: es,\n      hasToConsent: false,\n      //return hasLoaded to false\n      hasLoaded: true,\n      readyToScroll: false\n    };\n  }\n\n  authenticate() {\n    return new Promise(resolve => setTimeout(resolve, 1500)); //1500\n  }\n\n  toggleLang = lang => {\n    let language = lang === \"en\" ? en : es;\n    Cookies.set(\"chosenLang\", lang);\n    this.setState({\n      locale: language\n    });\n  };\n\n  handleRouteComplete = url => {\n    var _myself = this;\n    setTimeout(function() {\n      _myself.LoadingBar.complete();\n    }, 300);\n  };\n\n  handleRouteStart = url => {\n    this.LoadingBar.continuousStart();\n  };\n\n  handleRouteError = (err, url) => {\n    var _myself = this;\n    setTimeout(function() {\n      if (err.cancelled) {\n        console.log(`${err} on route to ${url}`);\n      }\n      _myself.LoadingBar.complete();\n    }, 300);\n  };\n\n  componentDidMount() {\n    // Disable scroll\n    // Esto es importante para el loading icon\n    const targetElement = document.querySelector(\"#logo\"); //dummy\n    disableBodyScroll(targetElement);\n\n    // Load Animation\n    this.authenticate().then(() => {\n      const bordered = document.getElementById(\"bordered\");\n      const logo = document.getElementById(\"logo\");\n      const revealer = document.getElementById(\"revealer\");\n      if (bordered) {\n        setTimeout(() => {\n          // transition out\n          bordered.classList.add(\"hidden\");\n          logo.style.opacity = \"0\";\n          // bordered.style.transform = \"scale(1)\";\n          // bordered.style.borderWidth = \"2px\";\n\n          setTimeout(() => {\n            revealer.style.opacity = \"0\";\n            revealer.style.pointerEvents = \"none\";\n            this.setState(\n              { hasLoaded: true },\n              () => console.log(\"Page hasLoaded\"),\n              enableBodyScroll(targetElement)\n            );\n          }, 500);\n\n          setTimeout(() => {\n            // remove from DOM\n            bordered.remove();\n            revealer.remove();\n            logo.remove();\n          }, 3000);\n        }, 500);\n      }\n    });\n    // router event listeners for loadingBar\n    Router.events.on(\"routeChangeStart\", this.handleRouteStart);\n    Router.events.on(\"routeChangeComplete\", this.handleRouteComplete);\n    Router.events.on(\"routeChangeError\", this.handleRouteError);\n  }\n\n  componentWillUnmount() {\n    Router.events.off(\"routeChangeStart\", this.handleRouteStart);\n    Router.events.off(\"routeChangeComplete\", this.handleRouteComplete);\n    Router.events.off(\"routeChangeError\", this.handleRouteError);\n  }\n\n  checkForConsent = () => {\n    // Check if cookie message has been closed before\n    var _C = Cookies.get(\"showCookieMessage\");\n    if (_C === undefined) {\n      this.setState({ hasToConsent: true });\n    } else if (_C === \"false\") {\n      this.setState({ hasToConsent: false });\n    }\n  };\n\n  consentToCookies = () => {\n    Cookies.set(\"showCookieMessage\", \"false\");\n    this.setState({ hasToConsent: false });\n  };\n\n  render() {\n    const { Component, pageProps } = this.props;\n    return (\n      <ThemeProvider theme={theme}>\n        <LangProvider value={this.state.locale}>\n          <LoadingBar\n            onRef={ref => (this.LoadingBar = ref)}\n            height={3}\n            color={theme.colors.accent}\n            className=\"TopBar\"\n          />\n          <Layout\n            locale={this.state.locale}\n            checkForConsent={this.checkForConsent}\n            consentToCookies={this.consentToCookies}\n            hasToConsent={this.state.hasToConsent}\n            hasLoaded={this.state.hasLoaded}\n            toggleLang={this.toggleLang}\n          >\n            <Component\n              locale={this.state.locale}\n              {...pageProps}\n              lang={this.state.locale.lang}\n            />\n          </Layout>\n        </LangProvider>\n      </ThemeProvider>\n    );\n  }\n}\n\nexport default withRouter(MyApp);\n"]},"metadata":{},"sourceType":"module"}